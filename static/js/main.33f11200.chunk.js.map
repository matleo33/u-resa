{"version":3,"sources":["Components/Home.js","Components/Profile.js","Components/Menu.js","Components/Connexion.js","Components/About.js","Components/Reservation.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","to","Profile","props","class","Button","primary","Card","Image","src","wrapped","ui","Content","Header","Meta","Description","extra","Icon","name","href","React","Component","Connexion","Segment","placeholder","Grid","columns","relaxed","stackable","Column","Form","Input","icon","iconPosition","label","type","content","About","Université","key","value","text","Reservation","id","secondary","Select","options","NoMatchPage","Root","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.33f11200.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <p>This is the HomePage</p>\r\n    <Link className=\"retour\" to=\"/u-resa/Profile\"> Mon profil </Link>\r\n  </div>\r\n\r\n)\r\n\r\nexport default Home;","import React from 'react';\r\nimport '../CSS/profil.css';\r\nimport { Card, Icon, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nexport default class Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"accueilBTN\">\r\n          <Link to=\"/\"><Button primary>Retour a l'accueil</Button></Link>\r\n        </div>\r\n        <div class=\"profilCard\">\r\n          <Card>\r\n            <Image src='https://scontent-cdg2-1.xx.fbcdn.net/v/t1.0-1/p240x240/69733501_10216927294193774_169972699379007488_o.jpg?_nc_cat=102&_nc_sid=dbb9e7&_nc_ohc=wPZc_aqRDk8AX_i0PG5&_nc_ht=scontent-cdg2-1.xx&_nc_tp=6&oh=933ff4e4be69f5f743a5ba94da8254cb&oe=5EDF8E57' wrapped ui={false} />\r\n            <Card.Content>\r\n              <Card.Header>Mathieu</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Test lib semantic ui react</span>\r\n              </Card.Meta>\r\n              <Card.Description>\r\n                Leothaud\r\n            </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <p>\r\n                <Icon name='university' />\r\n                Université de bordeaux\r\n            </p>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <a href=\"https://www.facebook.com/mleothaud\">\r\n                <Icon name='facebook' />\r\n                mleothaud\r\n            </a>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <a>\r\n                <Icon name='user' />\r\n                22 Friends\r\n            </a>\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport  \"../CSS/Menu.css\"\r\n\r\n\r\nconst Home = () => (\r\n  <div>\r\n      <header class=\"container-fluid MenuHeader\">\r\n          <div>\r\n            <Link class=\"logo\" to=\"/u-resa/\"> U-RESA </Link>\r\n            <nav class=\"menu\">\r\n              <Link to=\"/u-resa/reservation\"> Réservation </Link>\r\n              <Link to=\"/u-resa/Profile\"> Mon profil </Link>\r\n              <Link to=\"/u-resa/About\">A propos</Link>\r\n              <Link to=\"/\">Logout</Link>  \r\n            </nav>\r\n      \r\n          </div>\r\n        </header>\r\n  </div>\r\n\r\n)\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Divider, Form, Grid, Segment } from 'semantic-ui-react'\r\n\r\n\r\nexport default class Connexion extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Segment placeholder>\r\n                    <Grid columns={1} relaxed='very' stackable>\r\n                        <Grid.Column>\r\n                            <Form>\r\n                                <Form.Input\r\n                                    icon='user'\r\n                                    iconPosition='left'\r\n                                    label='Username'\r\n                                    placeholder='Username'\r\n                                />\r\n                                <Form.Input\r\n                                    icon='lock'\r\n                                    iconPosition='left'\r\n                                    label='Password'\r\n                                    type='password'\r\n                                />\r\n\r\n                                <Button content='Login' primary />\r\n                            </Form>\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                </Segment>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nconst About = () => (\r\n  <div>\r\n    <div>\r\n        <p>This is the About page</p>\r\n    </div>\r\n  </div>\r\n\r\n)\r\n\r\nexport default About;","import React from 'react';\r\nimport \"../CSS/Reservation.css\"\r\nimport { Button } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Select } from 'semantic-ui-react'\r\n\r\nconst Université = [\r\n    { key: 'af', value: 'af', text: 'Bordeux 1 le 100' },\r\n    { key: 'ax', value: 'ax', text: 'montaigne ptdr' },\r\n    { key: 'al', value: 'al', text: 'wesh la zone' },\r\n  ]\r\n\r\nconst Reservation = () => (\r\n  <div>\r\n    <section class=\"container-fluid reserv\">\r\n        <div class=\"ReservationFirst\">\r\n            <h2> Mes réservations </h2>\r\n            <hr class=\"separator\"></hr>\r\n            <div id=\"titi\">\r\n                    <Link to=\"/u-resa/\"><Button secondary>Historique</Button></Link>\r\n            </div>\r\n        </div>\r\n        <div class=\"TakeReservation\">\r\n            <h2> Prendre une réservation </h2>\r\n            <hr class=\"separator\"></hr>\r\n            <div id=\"listD\">\r\n            <Select  className=\"listD\" placeholder='Select your country' options={Université} />\r\n            </div>\r\n        </div>\r\n    </section>\r\n  </div>\r\n)\r\n\r\nexport default Reservation;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Home from \"./Components/Home\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport Profile from \"./Components/Profile\"\r\nimport Menu from \"./Components/Menu\"\r\nimport Connexion from \"./Components/Connexion\"\r\nimport About from './Components/About';\r\nimport Reservation from './Components/Reservation';\r\n\r\nconst NoMatchPage = () => {\r\n  return (\r\n    <div class=\"notFound\">\r\n      <h3 >404 - Not found</h3>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nconst Root = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Home}></Route>\r\n    <Route exact path=\"/u-resa/\" component={Home}></Route>\r\n    <Route exact path=\"/u-resa/Profile\" component={Profile}></Route>\r\n    <Route exact path=\"/u-resa/Connexion\" component={Connexion}></Route>\r\n    <Route exact path=\"/u-resa/About\" component={About}></Route>\r\n    <Route exact path=\"/u-resa/Reservation\" component={Reservation}></Route>\r\n    <Route component={NoMatchPage}></Route>\r\n  </Switch>\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Menu />\r\n        <Root />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './CSS/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Profile from \"./Components/Profile\"\r\nimport Connexion from \"./Components/Connexion\"\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\n\r\nconst NoMatchPage = () => {\r\n  return (\r\n    <div class=\"notFound\">\r\n      <h3 >404 - Not found</h3>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}